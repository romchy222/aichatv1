# Generated by Django 5.2.4 on 2025-07-20 06:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('agent', '0006_fileupload'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('daily_users', 'Дневная активность'), ('message_count', 'Количество сообщений'), ('response_time', 'Время ответа'), ('popular_topics', 'Популярные темы'), ('error_rate', 'Частота ошибок'), ('satisfaction', 'Удовлетворенность')], max_length=20)),
                ('metric_value', models.FloatField()),
                ('metadata', models.JSONField(default=dict, help_text='Дополнительная информация')),
                ('date_recorded', models.DateField()),
                ('hour_recorded', models.IntegerField(blank=True, help_text='Час дня (0-23)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Analytics',
                'verbose_name_plural': 'Analytics',
                'ordering': ['-date_recorded', '-hour_recorded'],
                'unique_together': {('metric_type', 'date_recorded', 'hour_recorded')},
            },
        ),
        migrations.CreateModel(
            name='EventSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('event_type', models.CharField(choices=[('exam', 'Экзамен'), ('deadline', 'Дедлайн'), ('lecture', 'Лекция'), ('seminar', 'Семинар'), ('holiday', 'Праздник'), ('registration', 'Регистрация'), ('meeting', 'Собрание'), ('other', 'Другое')], default='other', max_length=20)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_all_day', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('room_number', models.CharField(blank=True, max_length=50)),
                ('target_faculties', models.JSONField(default=list)),
                ('target_courses', models.JSONField(default=list)),
                ('target_groups', models.JSONField(default=list)),
                ('is_public', models.BooleanField(default=True)),
                ('reminder_days_before', models.IntegerField(default=1, help_text='За сколько дней напомнить')),
                ('reminder_sent', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event Schedule',
                'verbose_name_plural': 'Event Schedules',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('deadline', 'Дедлайн'), ('exam', 'Экзамен'), ('announcement', 'Объявление'), ('reminder', 'Напоминание'), ('system', 'Системное'), ('achievement', 'Достижение')], default='system', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('urgent', 'Срочный')], default='medium', max_length=10)),
                ('target_roles', models.JSONField(default=list, help_text='Список ролей для уведомления')),
                ('target_faculties', models.JSONField(default=list, help_text='Список факультетов')),
                ('target_courses', models.JSONField(default=list, help_text='Список курсов')),
                ('scheduled_for', models.DateTimeField(blank=True, help_text='Запланировать отправку', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Срок действия', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notifications', to=settings.AUTH_USER_MODEL)),
                ('target_users', models.ManyToManyField(blank=True, help_text='Конкретные пользователи', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('preferred_language', models.CharField(choices=[('ru', 'Русский'), ('kk', 'Қазақша'), ('en', 'English')], default='ru', max_length=5)),
                ('role', models.CharField(choices=[('student', 'Студент'), ('teacher', 'Преподаватель'), ('staff', 'Сотрудник'), ('admin', 'Администратор'), ('guest', 'Гость')], default='guest', max_length=20)),
                ('faculty', models.CharField(blank=True, max_length=100)),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('course_year', models.IntegerField(blank=True, help_text='Курс обучения', null=True)),
                ('group_number', models.CharField(blank=True, max_length=50)),
                ('email_notifications', models.BooleanField(default=True)),
                ('deadline_reminders', models.BooleanField(default=True)),
                ('system_announcements', models.BooleanField(default=True)),
                ('total_messages', models.IntegerField(default=0)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'ordering': ['-last_active'],
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agent.notification')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agent.userprofile')),
            ],
            options={
                'verbose_name': 'User Notification',
                'verbose_name_plural': 'User Notifications',
                'ordering': ['-delivered_at'],
                'unique_together': {('user_profile', 'notification')},
            },
        ),
    ]
